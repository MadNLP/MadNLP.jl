name: build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  actions: write
  contents: read

jobs:
  test-madnlp:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['1']
        julia-arch: [x64]
        os: [ubuntu-latest,macos-latest,windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/install-juliaup@v2
        with:
          channel: ${{ matrix.julia-version }}
      - uses: julia-actions/cache@v1
      - name: test MadNLP
        shell: julia --project=. --color=yes {0}
        run: |
          using Pkg
          Pkg.Registry.update()
          Pkg.test("MadNLP", coverage=true)
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src
      - uses: codecov/codecov-action@v5
        with:
          file: lcov.info
  test-mumps:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['1']
        julia-arch: [x64]
        os: [ubuntu-latest,macos-latest,windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/install-juliaup@v2
        with:
          channel: ${{ matrix.julia-version }}
      - uses: julia-actions/cache@v1
      - name: test MadNLPMumps
        shell: julia --project=./lib/MadNLPMumps --color=yes {0}
        run: |
          using Pkg
          Pkg.Registry.update()
          Pkg.test("MadNLPMumps", coverage=true)
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: lib/MadNLPMumps/src
      - uses: codecov/codecov-action@v5
        with:
          file: lcov.info
  test-hsl:
    runs-on: 
      labels: hsl
    strategy:
      matrix:
        julia-version: ['1']
        hsl-version: ['2024.11.28', '2024.12.31']
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/install-juliaup@v2
        with:
          channel: ${{ matrix.julia-version }}
      - uses: julia-actions/cache@v1
      - name: Set HSL_VERSION as environment variable
        run: echo "HSL_VERSION=${{ matrix.hsl-version }}" >> $GITHUB_ENV
      - name: test MadNLPHSL
        shell: julia --project=./lib/MadNLPHSL --color=yes {0}
        run: |
          using Pkg
          Pkg.Registry.update()
          path_HSL_jll = "/home/action-runner/HSL_jll.jl.v" * ENV["HSL_VERSION"]
          Pkg.develop(path=path_HSL_jll)
          Pkg.test("MadNLPHSL", coverage=true)
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: lib/MadNLPHSL/src
      - uses: codecov/codecov-action@v5
        with:
          file: lcov.info
  # Pardiso license currently not available
  # 
  # test-pardiso:
  #   runs-on: 
  #     labels: pardiso
  #   strategy:
  #     matrix:
  #       julia-version: ['1']
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: julia-actions/install-juliaup@v2
  #       with:
  #         channel: ${{ matrix.julia-version }}
  #     - uses: julia-actions/cache@v1
  #     - name: test MadNLPPardiso
  #       shell: julia --project=./lib/MadNLPPardiso --color=yes {0}
  #       run: |
  #         using Pkg
  #         Pkg.Registry.update()
  #         Pkg.test("MadNLPPardiso", coverage=true)
  #     - uses: julia-actions/julia-processcoverage@v1
  #       with:
  #         directories: lib/MadNLPPardiso/src
  #     - uses: codecov/codecov-action@v5
  #       with:
  #         file: lcov.info
  test-gpu:
    runs-on: 
      labels: cuda
    strategy:
      matrix:
        julia-version: ['1']
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/install-juliaup@v2
        with:
          channel: ${{ matrix.julia-version }}
      - uses: julia-actions/cache@v1
      - name: test MadNLPGPU
        shell: julia --project=./lib/MadNLPGPU --color=yes {0}
        run: |
          using Pkg
          Pkg.Registry.update()
          Pkg.test("MadNLPGPU", coverage=true)
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: lib/MadNLPGPU/src
      - uses: codecov/codecov-action@v5
        with:
          file: lcov.info
